/*
Задача 3. Обработка исключений для разностных массивов
Реализуйте метод subArraysWithExceptionHandling, который принимает
два массива целых чисел. Метод должен возвращать новый массив, где
каждый элемент является разностью соответствующих элементов двух входных
массивов. Если длины массивов не равны, выбрасывайте
IllegalArgumentException с сообщением "Массивы разной длины". Если
результат разности оказывается отрицательным, выбрасывайте
RuntimeException с сообщением "Отрицательный результат разности".
*/

/*
Подсказка № 1
Перед тем как выполнять какие-либо операции с массивами, проверьте их длины.
Используйте условие if для сравнения длины двух массивов. Если длины не равны,
добавьте сообщение об ошибке в список errors и верните пустой массив.

Подсказка № 2
Создайте новый массив для хранения результатов разностей соответствующих
элементов двух входных массивов. Убедитесь, что этот массив имеет длину, равную
длине входных массивов.

Подсказка № 3
Пройдитесь по каждому элементу входных массивов с помощью цикла for. Вычислите
разность соответствующих элементов и сохраните результат в новом массиве.

Подсказка № 4
После вычисления разностей, пройдитесь по новому массиву и проверьте, есть ли
отрицательные значения. Если такое значение найдено, добавьте соответствующее
сообщение об ошибке в список errors.

*/
package Seminar_1.DZ;

public class Task_3 {
    public static void main(String[] args) {
        int[] array1 = {4, 5, 6};
        int[] array2 = {1, 2, 3, 5};
        if (subArraysWithExceptionHandling(array1, array2) == 0){
            System.out.println("Ошибок не обнаружено");
        }
    }

    public static int subArraysWithExceptionHandling(int[] array1, int[] array2) throws IllegalArgumentException {
        if (array1.length != array2.length) {
            throw new IllegalArgumentException("Массивы разной длины");
        } else {
            int[] resultArray = new int[array1.length];
            for (int i = 0; i < array1.length; i++) {
                resultArray[i] = array1[i] - array2[i];
                if (resultArray[i] < 0) {
                    throw new RuntimeException("Отрицательный результат разности");
                }
            }
        }
        return 0;
    }
}
